/**
 * darkBoxJS v1.0.0
 * Created by Dustin Usey
 *
 * https://dustinusey.github.io/DarkBoxJS/
 *
 *
 *
 * https://github.com/dustinusey/DarkBoxJS
 */
const dbjs_cap = [], dbjs_src = []; let currentIndex = ""; class DarkBox { constructor() { this.overlay = !1 } overlayCreate() { const e = document.querySelector(".dbjs_photo_gallery"), t = document.createElement("div"), r = (document.createElement("div"), document.createElement("h3")); t.classList.add("dbjs_overlay"), e.appendChild(t), t.appendChild(r) } handleOverlay() { const e = document.querySelector(".dbjs_overlay"); document.querySelector(".dbjs_photo_gallery"); this.overlay ? e.style.display = "flex" : e.style.display = "none" } handleOverlayClicks(e) { const t = document.querySelector(".dbjs_overlay"); e.target === t && (this.overlay = !1), document.querySelectorAll(".dbjs_image_container img").forEach(t => { e.target === t && this.handleOverlayInfo(e) }), this.handleArrowClicks(e) } handleOverlayInfo(e) { const t = document.querySelector(".dbjs_overlay"); document.querySelectorAll(".dbjs_image_container img").forEach(r => { e.target === r && (t.innerHTML = `\n\t\t<img class="dbjs_full" src="${e.target.getAttribute("src")}">\n\t\t<h4>${e.target.parentNode.getAttribute("data-darkbox")}</h4>\n\t\t<img class="dbjs_arrow dbjs_left" src="darkboxJS_library/img/leftarrow.png" alt="previous image">\n\t\t<img class="dbjs_arrow dbjs_right" src="darkboxJS_library/img/rightarrow.png" alt="nect image">\n\t\t`) }) } handleCaptions() { document.querySelectorAll(".dbjs_image_container").forEach(e => { let t = e.getAttribute("data-darkbox"); dbjs_cap.push(t) }) } handleImgSrc() { document.querySelector(".dbjs_photo_gallery").querySelectorAll("img").forEach(e => { let t = e.getAttribute("src"); dbjs_src.push(t) }) } handleImageResize(e) { document.querySelectorAll(".dbjs_image_container img").forEach(t => { e.target === t && setTimeout(() => { const e = document.querySelector(".dbjs_overlay"), t = document.querySelector(".dbjs_full"), r = e.querySelector("h4"); t.style.width = "75%", r.style.opacity = "1" }, 50) }) } handleArrowClicks(e) { document.querySelectorAll(".dbjs_arrow").forEach(t => { e.target === t && (e.target.classList.contains("dbjs_right") ? (currentIndex++, this.handleIndexChange(), this.handleDataFilter()) : (currentIndex--, this.handleIndexChange(), this.handleDataFilter())) }) } handleIndexChange() { const e = document.querySelectorAll(".dbjs_image_container"), t = document.querySelector(".dbjs_right"), r = document.querySelector(".dbjs_left"); currentIndex === e.length - 1 ? (t.classList.add("dbjs_disabled"), currentIndex = e.length - 1) : t.classList.remove("dbjs_disabled"), 0 === currentIndex ? (r.classList.add("dbjs_disabled"), currentIndex = 0) : r.classList.remove("dbjs_disabled") } handleDataFilter() { const e = document.querySelector(".dbjs_full"), t = document.querySelector(".dbjs_overlay h4"); e.src = dbjs_src[currentIndex], t.textContent = dbjs_cap[currentIndex] } handleInitialIndex(e) { setTimeout(() => { const t = document.querySelectorAll(".dbjs_image_container"), r = document.querySelector(".dbjs_right"), a = document.querySelector(".dbjs_left"); e.target.parentNode === t[0] ? (currentIndex = 0, a.classList.add("dbjs_disabled")) : e.target.parentNode === t[t.length - 1] && (currentIndex = t.length - 1, r.classList.add("dbjs_disabled")) }, 100) } } const dbjs_gal = document.querySelector(".dbjs_photo_gallery"); dbjs_gal.addEventListener("click", e => { darkBoxJS.handleOverlayClicks(e), darkBoxJS.handleOverlay(), darkBoxJS.handleImageResize(e) }), dbjs_gal.addEventListener("click", e => { const t = document.querySelectorAll(".dbjs_image_container img"); document.querySelector(".dbjs_right"), document.querySelector(".dbjs_left"); t.forEach((t, r) => { e.target === t && (currentIndex = r, darkBoxJS.handleInitialIndex(e), darkBoxJS.handleOverlayClicks(e), darkBoxJS.handleOverlay(), darkBoxJS.handleOverlayInfo(e), darkBoxJS.overlay = !0, darkBoxJS.handleOverlay()) }) }); let darkBoxJS = new DarkBox; darkBoxJS.overlayCreate(), darkBoxJS.handleOverlay(), darkBoxJS.handleCaptions(), darkBoxJS.handleImgSrc();